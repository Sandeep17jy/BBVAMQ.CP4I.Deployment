*******************************************************************************
* Script generated on 2020-02-29   at 16.50.37 
* Script generated by user 'saber' on host 'SABER_PC' 
* Queue manager name: mqadvancedev 
* Queue manager platform: UNIX 
* Queue manager command level: (914/914)   
* Command issued: C:\IBM\MQ\bin64\dmpmqcfg -m mqadvancedev -t all -x all -o mqsc -c DEFINE CHANNEL('SYSTEM.ADMIN.SVRCONN') CHLTYPE(CLNTCONN)  CONNAME('52.152.201.20(1414)')  
*******************************************************************************
ALTER QMGR +
*  ADVCAP(ENABLED) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   CCSID(819) +
   CHLAUTH(DISABLED) +
   CLWLUSEQ(LOCAL) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONNAUTH('DEV.AUTHINFO') +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.02) +
   DEADQ('DEV.DEAD.LETTER.QUEUE') +
   MAXMSGL(104857600) +
*  PLATFORM(UNIX) +
*  QMID(mqadvancedev_2020-02-06_16.46.02) +
*  SPLCAP(ENABLED) +
   SSLCRYP(' ') +
   SSLKEYR('/run/runmqserver/tls/key') +
   SUITEB(NONE) +
*  VERSION(09010400) +
   FORCE
DEFINE QLOCAL('DEV.DEAD.LETTER.QUEUE') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.1') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.2') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.3') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.19) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('MQATTACH') +
*  ALTDATE(2020-02-20) +
*  ALTTIME(17.58.35) +
*  CRDATE(2020-02-12) +
*  CRTIME(19.25.45) +
   DESCR('Transaction Logging') +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   TRIGGER +
*  OPPROCS(1) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('QA.EA.APP.ELOGAPPEVENT.XML.NONPROD') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.38) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QA.EA.APP.ELOGBUSINESSEVENT.XML.NONPROD') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.38) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QA.NC.LETTERS.PROCESS.IN') +
*  ALTDATE(2020-02-16) +
*  ALTTIME(16.44.00) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QA.NC.LETTERS.PROCESS.ME0107.IN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.38) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.38) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QA.NC.LETTERS.TRIGGER.IN.BACKOUT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.39) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.IH.MTV.CLAIMS.CDR.BACKUP') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.39) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.NC.LETTERS.EMME.REQUEST') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.39) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.39) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.NC.LETTERS.GENAGG.IN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.39) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.NC.LETTERS.ME2883AGG.IN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.39) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.39) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.NC.LETTERS.PROCESS.IN') +
*  ALTDATE(2020-02-15) +
*  ALTTIME(02.10.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.40) +
   DEFREADA(DISABLED) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('QL.NC.LETTERS.TRIGGER.IN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.40) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.40) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.40) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DESCR('IBM MQ Administration Accounting Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.40) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DESCR('IBM MQ Administration Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.40) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.08) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.41) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Command Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.41) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
*  OPPROCS(4) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.41) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.13) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Configuration Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.41) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Logger Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.41) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.08) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Performance Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.42) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DESCR('IBM MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.42) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
*  CURDEPTH(1) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.42) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DESCR('IBM MQ Administration Statistics Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.42) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DESCR('IBM MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.42) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DESCR('IBM MQ Administration Trace Route Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AMQP.COMMAND.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.43) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.15) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.43) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.06) +
*  CURDEPTH(181) +
   DESCR('IBM MQ Authority Data Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.FAILED') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.43) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.43) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.NEW') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.43) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.43) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.PROCESSED') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.44) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.44) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.44) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.44) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.12) +
   DEFPSIST(YES) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.CONTROL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.44) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.44) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.REPLY') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.44) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.44) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.REQUEST') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.45) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.TIMEOUT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.45) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AGGR.UNKNOWN') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.45) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.AUTH') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.45) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QMODEL('SYSTEM.BROKER.CD.MODEL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.45) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.45) +
   DEFPSIST(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.12) +
   DEFPSIST(YES) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(4) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DC.AUTH') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DC.BACKOUT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.46) +
*  CURDEPTH(1082) +
   DEFPSIST(YES) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
*  OPPROCS(10) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DC.RECORD') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.46) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.46) +
   DEFPSIST(YES) +
   DISTL(NO) +
*  IPPROCS(10) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.12) +
   DEFPSIST(YES) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EDA.COLLECTIONS') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.47) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.EDA.EVENTS') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.47) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QMODEL('SYSTEM.BROKER.FTE.MODEL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.47) +
   DEFPSIST(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DISTL(NO) +
   MAXDEPTH(10000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.47) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.19) +
   DEFPSIST(YES) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   NOSHARE +
   REPLACE
DEFINE QMODEL('SYSTEM.BROKER.MODEL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.EXPIRY') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.GROUP') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.SEQ.NUMBER') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.TIMEOUT.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DISTL(NO) +
   MAXDEPTH(100000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.ACK') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.48) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.48) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.INPUT') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.49) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.WS.REPLY') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.49) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.49) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.49) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Initiation Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.49) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Channel Sync Queue') +
   DISTL(NO) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   QDEPTHLO(40) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.49) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
*  CURDEPTH(7) +
   DESCR('IBM MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.50) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
   DESCR('IBM MQ Default CICS Initiation queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.50) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.08) +
   DESCR('IBM MQ Cluster Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.50) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.13) +
   DESCR('IBM MQ Cluster History Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.50) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.08) +
*  CURDEPTH(2) +
   DESCR('IBM MQ Cluster Repository Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.50) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DESCR('IBM MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.08) +
   DESCR('IBM MQ Cluster Transmission Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DDELAY.LOCAL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.15) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Delivery Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
   DESCR('IBM MQ Default Dead Letter Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.06) +
   DESCR('IBM MQ Default Initiation Queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.51) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.06) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.52) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.06) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.52) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.52) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DEFPSIST(YES) +
   DESCR('IBM MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.52) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
   DEFSOPT(EXCL) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.52) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
*  CURDEPTH(1) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.38) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.52) +
   DEFPSIST(YES) +
   DESCR('Stream for MQMFT Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHADM1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.53) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.53) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHADM1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.19) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.19) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHAGT1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.53) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.53) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHAGT1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.17) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.17) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHMON1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.53) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.53) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHMON1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.18) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.18) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHOPS1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.53) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.53) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHOPS1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.18) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.18) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHSCH1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.53) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.53) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHSCH1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.18) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.18) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHTRN1.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.54) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.54) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.AUTHTRN1.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.18) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.18) +
   DISTL(NO) +
   MAXDEPTH(0) +
   MAXMSGL(0) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.COMMAND.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.54) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.COMMAND.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.16) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.DATA.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.54) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.DATA.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.16) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.16) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.EVENT.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.54) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.EVENT.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.17) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.17) +
*  CURDEPTH(2) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.REPLY.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.54) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.54) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.REPLY.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.17) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.17) +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.STATE.AKSAGNT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.55) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.55) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.FTE.STATE.HUM_AGT1') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.54.17) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.54.17) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.55) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.12) +
*  CURDEPTH(3) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.55) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.55) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.12) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.55) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.56) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.13) +
   DESCR('IBM MQ Internal Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REQUEST.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.56) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.15) +
   DESCR('IBM MQ Internal Request Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.56) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.14) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.56) +
*  CRDATE(2020-02-06) +
*  CRTIME(19.52.56) +
   DESCR('IBM MQ Message Association Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.56) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.10) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.57) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.07) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('IBM MQ MQSC Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.57) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.57) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.09) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Message Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.57) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.15) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Error Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.57) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.15) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Policy Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.REST.REPLY.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.58) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.16) +
   DESCR('IBM MQ REST Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   QDPMAXEV(DISABLED) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.58) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.11) +
*  CURDEPTH(83) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.58) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.13) +
   DESCR('IBM MQ Selection Evaluation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.58) +
*  CRDATE(2020-02-06) +
*  CRTIME(16.46.13) +
   DESCR('IBM MQ Selection Validation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.58) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(3) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM' +
        ,'SYSTEM.FTE') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.38) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   REPLACE
DEFINE CHANNEL('ACE.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   MCAUSER('mqm') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('ACE2.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-15) +
*  ALTTIME(01.53.10) +
   DISCINT(9999) +
   KAINT(60) +
   MCAUSER('mqm') +
   SHARECNV(0) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DEV.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   MCAUSER('mqm') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DEV.APP.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   MCAUSER('app') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('HUM_AGT1.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.57.00) +
   DESCR('Channel for MFT Agent') +
   MCAUSER('mqm') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('RECORD.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(20.24.54) +
   MCAUSER('mqm') +
   SHARECNV(1) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   MCAUSER('mqm') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.BKR.CONFIG') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   MCAUSER('mqm') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.AMQP') +
   CHLTYPE(AMQP) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.15) +
   PORT(5672) +
   TPROOT('SYSTEM.BASE.TOPIC') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.08) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.08) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.51.34) +
   MCAUSER('mqm') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('TO.GTM') +
   CHLTYPE(SVR) +
*  ALTDATE(2020-02-12) +
*  ALTTIME(19.29.27) +
   DISCINT(999999) +
   TRPTYPE(TCP) +
   XMITQ('MQATTACH') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.09) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   AUTHTYPE(IDPWLDAP) +
   ADOPTCTX(YES) +
   CONNAME(' ') +
   CHCKCLNT(REQUIRED) +
   SHORTUSR(' ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.15) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(NONE) +
   CHCKLOCL(NONE) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.13) +
   REPLACE
DEFINE AUTHINFO('DEV.AUTHINFO') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(NONE) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(18.52.19) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') +
   TRPTYPE(TCP) +
   CONTROL(MANUAL) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.10) +
   REPLACE
DEFINE LISTENER('SYSTEM.LISTENER.TCP.1') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(1414) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.15) +
   REPLACE
DEFINE LISTENER('TCP') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(1415) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.38) +
   REPLACE
DEFINE SERVICE('SYSTEM.AMQP.SERVICE') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_INSTALL_PATH+/bin/amqp.sh') +
   STARTARG('start -m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+/." -g "+MQ_DATA_PATH+/."') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/endmqsde') +
   STOPARG('-m +QMNAME+ -n "+MQ_SERVICE_NAME+" -t AMQP') +
   STDOUT('+MQ_Q_MGR_DATA_PATH+/amqp.stdout') +
   STDERR('+MQ_Q_MGR_DATA_PATH+/amqp.stderr') +
   DESCR('Manages clients that use the AMQP protocol') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.15) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.10) +
   REPLACE
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.14) +
   GRPADDR('239.0.0.0') +
   PORT(1414) +
   REPLACE
DEFINE TOPIC('DEV.BASE.TOPIC') +
   TOPICSTR('dev/') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   REPLACE
DEFINE TOPIC('SYSTEM.ADMIN.TOPIC') +
   TOPICSTR('$SYS/MQ') +
   DESCR('Root topic for MQ administrative topics') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(16.46.15) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(QMGR) +
   SUBSCOPE(QMGR) +
   WILDCARD(BLOCK) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.52.59) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.00) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.MB.TOPIC') +
   TOPICSTR('$SYS/Broker') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.00) +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TOPICSTR('') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.00) +
   REPLACE
DEFINE TOPIC('SYSTEM.FTE') +
   TOPICSTR('SYSTEM.FTE') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.37) +
   PMSGDLV(ALLAVAIL) +
   NPMSGDLV(ALLAVAIL) +
   REPLACE
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
*  DISTYPE(DEFINED) +
*  SUBTYPE(ADMIN) +
*  CRDATE( ) +
*  CRTIME( ) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19:53:00) +
   REPLACE
DEFINE SUB('GTM.ACE.STATS') +
   TOPICSTR('$SYS/Broker/+/Statistics/JSON/#') +
*  DISTYPE(DEFINED) +
   DEST('HMNA.IIB.STATS') +
   DESTQMGR('MQATTACH') +
   PUBACCT(0338383800000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D51206D71616476616E63656465767979455EC89AFD2D) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2020-02-20) +
*  CRTIME(16:21:23) +
*  ALTDATE(2020-02-20) +
*  ALTTIME(16:21:23) +
   REPLACE
DEFINE SUB('ACE.MONITOR.EVENTS') +
   TOPICSTR('$SYS/Broker/#/Monitoring/#') +
*  DISTYPE(DEFINED) +
   DEST('HMNA.IIB.LOG') +
   DESTQMGR('MQATTACH') +
   PUBACCT(0338383800000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D51206D71616476616E6365646576D0673C5E522DBF2A) +
*  SUBTYPE(ADMIN) +
   SUBUSER('mqm') +
*  CRDATE(2020-02-12) +
*  CRTIME(19:27:43) +
*  ALTDATE(2020-02-17) +
*  ALTTIME(00:42:00) +
   REPLACE
SET CHLAUTH('ACE.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('mqadmin allow') +
   USERLIST('nobody') +
   WARN(YES) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.00) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.ADMIN.SVRCONN') +
   TYPE(USERMAP) +
   DESCR('Allows admin user to connect via ADMIN channel') +
   CLNTUSER('admin') +
   USERSRC(CHANNEL) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Allows admins on ADMIN channel') +
   USERLIST('nobody') +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.APP.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Allows connection via APP channel') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
   CHCKCLNT(REQUIRED) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow IIB ACCESS') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.BKR.CONFIG') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow IIB ACCESS') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2020-02-06) +
*  ALTTIME(19.53.01) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(ADDRESSMAP) +
   DESCR('Back-stop rule - Blocks everyone') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2020-02-13) +
*  ALTTIME(16.29.46) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   USERLIST('nobody') +
*  ALTDATE(2020-02-06) +
*  ALTTIME(20.00.23) +
   ACTION(REPLACE)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.DATA.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.PROCESSED') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('RECORD.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.NUMBER') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.GROUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.ACK') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHSCH1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHTRN1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('MQATTACH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.EVENT.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('DEV.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DC.BACKOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHMON1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.STATE.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QL.NC.LETTERS.TRIGGER.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QA.EA.APP.ELOGAPPEVENT.XML.NONPROD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('DEV.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DC.RECORD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('HUM_AGT1.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('QL.NC.LETTERS.GENAGG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHADM1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ACE.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHOPS1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.MB.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CD.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHAGT1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QA.EA.APP.ELOGBUSINESSEVENT.XML.NONPROD') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.EVENTS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QA.NC.LETTERS.TRIGGER.IN.BACKOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.COMMAND.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QA.NC.LETTERS.PROCESS.ME0107.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QL.NC.LETTERS.ME2883AGG.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('ACE2.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.REST.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.NEW') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AUTH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.AMQP') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.DATA.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.EVENT.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.UNKNOWN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.LISTENER.TCP.1') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('TO.GTM') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHTRN1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.FAILED') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADAPTER.INPROGRESS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqclient') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QL.NC.LETTERS.EMME.REQUEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.COMMAND.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.MESSAGE.ASSOCIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(RQMNAME) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqclient') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.STATE.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.UNKNOWN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.SEQ.EXPIRY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.TIMEOUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqclient') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqclient') +
   OBJTYPE(TOPIC) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.FTE.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHADM1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHAGT1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.REPLY') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHOPS1.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.APP.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.REPLY.AKSAGNT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DC.AUTH') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QA.NC.LETTERS.PROCESS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QL.NC.LETTERS.PROCESS.IN') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHMON1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.REQUEST') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.WS.INPUT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('QL.IH.MTV.CLAIMS.CDR.BACKUP') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.EDA.COLLECTIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.AGGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.REPLY.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.AUTHINFO') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.FTE.AUTHSCH1.HUM_AGT1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.TIMEOUT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BKR.CONFIG') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.**') +
   GROUP('mqclient') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
SET AUTHREC +
   PROFILE('DEV.**') +
   GROUP('mqclient') +
   OBJTYPE(TOPIC) +
   AUTHADD(PUB,SUB)
*******************************************************************************
* Script ended on 2020-02-29   at 16.50.51 
* Number of Inquiry commands issued: 14 
* Number of Inquiry commands completed: 14 
* Number of Inquiry responses processed: 375 
* QueueManager count: 1 
* Queue count: 133 
* NameList count: 3 
* Process count: 1 
* Channel count: 20 
* AuthInfo count: 5 
* Listener count: 3 
* Service count: 2 
* CommInfo count: 1 
* Topic count: 9 
* Subscription count: 3 
* ChlAuthRec count: 9 
* Policy count: 1 
* AuthRec count: 184 
* Number of objects/records: 375 
*******************************************************************************
